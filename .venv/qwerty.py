import os  # Импорт модуля os для работы с переменными окружения
from dotenv import load_dotenv  # Импорт функции load_dotenv из библиотеки dotenv для загрузки переменных из .env файла
import telebot  # Импорт библиотеки telebot для работы с Telegram Bot API
import time  # Импорт модуля time для реализации задержек
import queue  # Импорт модуля queue для создания очереди сообщений
import threading  # Импорт модуля threading для создания и управления потоками

# Загружаем переменные окружения из файла .env
load_dotenv()

# Инициализация бота с токеном, полученным из переменных окружения
bot = telebot.TeleBot(os.getenv("TELEGRAM_TOKEN"))

# Инициализация ID пользователя, которому будут отправляться сообщения (также берется из переменных окружения)
user_id = int(os.getenv("TELEGRAM_USER_ID"))

# Создание очереди для хранения сообщений, которые нужно отправить
message_queue = queue.Queue()


# Функция для отправки сообщений с задержкой в 1 секунду
def send_message_with_delay():
    while True:  # Бесконечный цикл, который будет постоянно проверять наличие сообщений в очереди
        try:
            # Извлечение следующего сообщения из очереди (ожидает, если очередь пуста)
            message = message_queue.get()

            # Отправка извлеченного сообщения пользователю через бота
            bot.send_message(user_id, message)
            print(f"Отправлено сообщение: {message}")  # Вывод в консоль подтверждения отправки

            # Задержка в 1 секунду перед отправкой следующего сообщения
            time.sleep(1)
        except Exception as e:  # Обработка исключений, если возникает ошибка при отправке
            print("Ошибка при отправке сообщения:", e)  # Вывод ошибки в консоль


# Список сообщений, которые будут добавлены в очередь для отправки
messages = ["Привет!", "Как дела?", "Это тестовое сообщение", "Очередь работает!",5]

# Добавление каждого сообщения из списка в очередь
for msg in messages:
    message_queue.put(msg)

# Создание и запуск отдельного потока для функции отправки сообщений с задержкой
thread = threading.Thread(target=send_message_with_delay)
thread.start()  # Запуск потока для начала отправки сообщений из очереди